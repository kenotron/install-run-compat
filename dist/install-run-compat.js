// DO NOT EDIT THIS FILE. This is generated code.
'use strict';

var child_process = require('child_process');
var os = require('os');
var path = require('path');
var fs = require('fs');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var os__default = /*#__PURE__*/_interopDefaultLegacy(os);
var path__default = /*#__PURE__*/_interopDefaultLegacy(path);
var fs__default = /*#__PURE__*/_interopDefaultLegacy(fs);

const RE_SCOPED = /^(@[^/]+\/[^/@]+)(?:\/([^@]+))?(?:@([\s\S]+))?/;
const RE_NORMAL = /^([^/@]+)(?:\/([^@]+))?(?:@([\s\S]+))?/;

var parsePackageName = function (input) {
  if (typeof input !== 'string') {
    throw new TypeError('Expected a string')
  }

  const matched = input.charAt(0) === '@' ? input.match(RE_SCOPED) : input.match(RE_NORMAL);

  if (!matched) {
    throw new Error(`[parse-package-name] "${input}" is not a valid string`)
  }

  return {
    name: matched[1],
    path: matched[2] || '',
    version: matched[3] || ''
  }
};

// this is the rush / yarn compatible version of install-run.js
const npmCmd = path__default['default'].join(path__default['default'].dirname(process.execPath), os__default['default'].platform() === "win32" ? "npm.cmd" : "npm");
const args = process.argv.slice(2);
const name = args[0];
const command = args[1];
const commandArgs = args.slice(2);
// get cacheDir
const results = child_process.spawnSync(npmCmd, ["config", "get", "cache", "--parseable"]);
const cacheDir = results.stdout.toString().trim();
// npm i -g blah@1.2.3 -c prefix
const pkgInfo = parsePackageName(name);
if (!pkgInfo.version) {
    throw new Error("Needs to specify the version number (foo@1.2.3)");
}
const prefix = path__default['default'].join(cacheDir, "_install-run-compat", name);
if (!fs__default['default'].existsSync(prefix)) {
    console.log(`Globally install a cached version of ${name}`);
    child_process.spawnSync(npmCmd, ["install", name, "--prefix", prefix], {
        stdio: "inherit",
    });
}
child_process.spawnSync(path__default['default'].join(prefix, os__default['default'].platform() === "win32" ? command + ".cmd" : command), commandArgs, { stdio: "inherit", env: process.env });
